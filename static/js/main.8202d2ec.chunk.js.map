{"version":3,"sources":["GoodItem.jsx","GoodList.jsx","App.jsx","index.jsx"],"names":["GoodItem","_ref","good","_jsx","children","GoodList","goods","map","goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_BY_LENGTH","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","reverse","setReverse","readyGoods","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","getPreparedGoods","_jsxs","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAW,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAAOC,cAAA,MAAI,UAAQ,OAAMC,SAAEF,KCE7CG,EAAW,SAAHJ,GAAA,IAAMK,EAAKL,EAALK,MAAK,OAC9BH,cAAA,MAAAC,SACGE,EAAMC,KAAI,SAAAL,GAAI,OACbC,cAACH,EAAQ,CAACE,KAAMA,GAAWA,SCCpBM,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAuB,SA2BtB,IAAMC,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAA8BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EA3BR,SAA0BhB,EAAOU,EAAWI,GAC1C,IAAMG,EAAaC,YAAOlB,GAoB1B,OAlBIU,GACFO,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQX,GACN,KAAKP,EACH,OAAOiB,EAAME,cAAcD,GAE7B,KAAKjB,EACH,OAAOgB,EAAMV,GAAaW,EAAMX,GAClC,QACE,OAAO,MAKXI,GACFG,EAAcH,UAGTG,EAMYM,CAAiBrB,EAAiBQ,EAAWI,GAEhE,OACEU,eAAA,OAAKC,UAAU,kBAAiB3B,SAAA,CAC9B0B,eAAA,OAAKC,UAAU,UAAS3B,SAAA,CACtBD,cAAA,UACE6B,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcP,IAE5ByB,QAAS,WACPjB,EAAaR,IACbL,SACH,wBAIDD,cAAA,UACE6B,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAcN,IAE5BwB,QAAS,WACPjB,EAAaP,IACbN,SACH,mBAIDD,cAAA,UACE6B,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAab,IAEfc,QAAS,WACPb,GAAYD,IACZhB,SACH,aAIe,KAAdY,GAAoBI,IACpBjB,cAAA,UACE6B,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EA3EW,IA4EXI,GAAW,IACXjB,SACH,aAKLD,cAACE,EAAQ,CAACC,MAAOgB,QCrGvBa,IAASC,OACPjC,cAACQ,EAAG,IACJ0B,SAASC,eAAe,W","file":"static/js/main.8202d2ec.chunk.js","sourcesContent":["export const GoodItem = ({ good }) => <li data-cy=\"Good\">{good}</li>;\n","import { GoodItem } from './GoodItem';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodItem good={good} key={good} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\nimport { GoodList } from './GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_BY_LENGTH = 'length';\nconst SORT_FIELD_RESET = '';\n\nfunction getPreparedGoods(goods, sortField, reverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_BY_LENGTH:\n          return good1[sortField] - good2[sortField];\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const readyGoods = getPreparedGoods(goodsFromServer, sortField, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_BY_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={() => {\n            setReverse(!reverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SORT_FIELD_RESET);\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodList goods={readyGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}